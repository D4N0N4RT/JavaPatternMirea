plugins {
    id 'java'
    id 'application'
}

group 'org.example'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
    }
    test {
        java {
            srcDirs = ['test']
        }
    }
}

application{
    mainClass = 'Main'
}

tasks.named('test'){
    useJUnitPlatform()
}

def path = layout.projectDirectory.dir('src/main/resources')

task createJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'GrdlJar',
                'Implementation-Version': version,
                'Main-Class': 'main.java.Main'
    }
    baseName = 'task9-jar'
}

task copyJarToBin(type: Copy) {
    from createJar // shortcut for createJar.outputs.files
    into path
}

task createImage(type: Exec) {
    workingDir "$path"
    commandLine "cmd","/c", 'docker', 'build', '.', '--tag', 'grdl_task'
    ignoreExitValue true
}

task createContainer(type: Exec){
    workingDir "$path"
    println "moving jar"
    copyJarToBin

    println "building a docker image"
    createImage

    println "running docker"
    commandLine "cmd", "/c", 'docker', 'run', 'grdl_task'
    ignoreExitValue true
    doLast{
        //println execResult
    }
    //def out = executable("echo Hello1").toString()
}


task prepareKotlinBuildScriptModel {

}